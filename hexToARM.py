
from capstone import *

# Initialize Capstone disassembler
md = Cs(CS_ARCH_ARM, CS_MODE_ARM)

# Store hexadecimal strings to convert
hex_string = (
    "370301e3ce100ae376174de3d82c03e38b2f49e3010000e0020000e04b1a0e"
    "e3e11243e37c2808e3a92343e3010000e0020000e09f1101e33d1c41e34029"
    "07e3bb214ce3900100e0900200e07e1200e3a0194ee3342504e3ad2c41e301"
    "0020e0020020e0141701e399194de30d210de3a0274be3900100e0900200e0"
    "831d01e3551849e3d02e05e3eb224ce3900100e0900200e04a1d08e3c21845"
    "e3472f04e3642540e3010000e0020000e06c1104e37c1a4be3d32109e35322"
    "4fe3010040e00200c0e08b1602e3971b49e32a2909e354204ae3010020e002"
    "0020e0bc1104e3731545e322250ee3342c43e3010080e00200a0e03e1705e3"
    "c7124ae3e3200ee389284de3010080e00200a0e0ab1c0be3c11940e3302506"
    "e3b62a45e3010080e1020080e1c71d0ce33c1241e3202405e37d2942e30100"
    "40e00200c0e0921304e3f7184de3102907e35d2944e3010000e0020000e0fa"
    "1fa0e389154be3b42608e3eb2e4be3010080e00200a0e025190ee3e61f4de3"
    "b52802e3142f4de3010040e00200c0e0f7140de3c11746e3182e0be30e274e"
    "e3010080e1020080e1a4140ee334104ae34d2202e3512a4ce3000060e24916"
    "0fe3901045e399220ee3b62245e3010020e0020020e0271501e3e01844e3ef"
    "2c0de3c72840e3900100e0900200e0"
)

# Convert hex to bytes
code_bytes = bytes.fromhex(hex_string)

# Disassemble each instruction
for i in md.disasm(code_bytes, 0x1000):
    print(f"0x{i.address:x}:\t{i.mnemonic}\t{i.op_str}")